import serial
import codecs
from sys import argv
from os.path import exists
import time
from statistics import mean


testcomport=['COM1','COM2','COM3','COM4','COM5','COM6','COM7','COM8','COM9','COM10']

class SensorRFID:
    #Do this
    baudrate=57600
    comport=''
    serialport=''
    portisgood=0
    value_ave_final=0
    value_ave_sum=0
    value_ave_count=0
    value_ave_max=10
    averageresultof=10
    returnvalue="" #get from function readserial()
    millislastread=time.process_time_ns()
    connect_portinterger=0
    connect_portinterger_max=10
    
class SensorWeight:
    baudrate=9600
    comport=''
    serialport=''
    portisgood=0
    value_ave_final=0
    value_ave_sum=0
    value_ave_count=0
    averageresultof=10
    returnvalue="" #get from function readserial()
    millislastread=time.process_time_ns()
    connect_portinterger=0
    connect_portinterger_max=10
    def readserial():
        value=serialport.readline()
        print("value is ...")
        print(value)
        return value
    def loop(self):
        if self.serialport=='':
            self.connect()
            return()
        print(self.readserial)
    def connect(self):
        print("trying to connect to")
        print(testcomport[self.connect_portinterger])
        try:
            self.serialport=serial.Serial(testcomport[self.connect_portinterger],9600)    
        except :
            print("Warning","cannot open")
            self.connect_portinterger+=1
            if self.connect_portinterger>= self.connect_portinterger_max:
                self.connect_portinterger=0
                time.sleep(1)

        

    
    def Average(l): 
        avg = mean(l) 
        return avg
    x = [1,1,1,1,1,1,1,1,1,1] 
    average = Average(x) 
  
    print ("Average of x is", average)
       
    
mainloop=1

snowscale=SensorWeight()
while mainloop==1:
    snowscale.loop()


ser=serial.Serial('COM8', 57600)
print(ser.name)


ser2=serial.Serial('COM9', 9600)
print(ser2.name)




while True:
    s = ser.readline()
    print(codecs.encode(s, 'hex'))
    s = ser2.readline()
    print(s)
    #hex_string=s[2:]
    #hex_string.decode("utf-8")
    #b_obj=bytes.fromhex(hex_string)
    #ascii_string=bytes_object.decode("ASCII")
    #print(ascii_string)

ser.close()
ser2.close() 
